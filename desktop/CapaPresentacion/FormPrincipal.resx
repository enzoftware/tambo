<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>